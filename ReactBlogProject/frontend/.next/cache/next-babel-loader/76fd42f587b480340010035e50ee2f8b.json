{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport cookie from 'js-cookie';\nimport Router from 'next/router';\nexport var signup = function signup(user) {\n  return fetch(\"\".concat(API, \"/signup\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var signin = function signin(user) {\n  return fetch(\"\".concat(API, \"/signin\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; // set cookie\n\nexport var setCookie = function setCookie(key, value) {\n  if (true) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport var removeCookie = function removeCookie(key) {\n  if (true) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; // get cookie\n\nexport var getCookie = function getCookie(key) {\n  if (true) {\n    return cookie.get(key);\n  }\n}; // localstorage\n\nexport var setLocalStorage = function setLocalStorage(key, value) {\n  if (true) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport var removeLocalStorage = function removeLocalStorage(key) {\n  if (true) {\n    localStorage.removeItem(key);\n  }\n}; // autheticate user by pass data to cookie and localstorage\n\nexport var authenticate = function authenticate(data, next) {\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n};\nexport var isAuth = function isAuth() {\n  if (true) {\n    var cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["D:/Home_WorkSpace/GTs_Code_WorkSpace/A2z React/ReactBlogProject/frontendManual/actions/auth.js"],"names":["fetch","API","cookie","Router","signup","user","method","headers","Accept","body","JSON","stringify","then","response","json","err","console","log","signin","setCookie","key","value","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeLocalStorage","removeItem","authenticate","data","next","token","isAuth","cookieChecked","getItem","parse"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\nimport cookie from 'js-cookie';\r\nimport Router from 'next/router';\r\n\r\nexport const signup = user => {\r\n    return fetch(`${API}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(response => {\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const signin = user => {\r\n    return fetch(`${API}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n// set cookie\r\nexport const setCookie = (key, value) => {\r\n    if (process.browser) {\r\n        cookie.set(key, value, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeCookie = key => {\r\n    if (process.browser) {\r\n        cookie.remove(key, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n// get cookie\r\nexport const getCookie = key => {\r\n    if (process.browser) {\r\n        return cookie.get(key);\r\n    }\r\n};\r\n// localstorage\r\nexport const setLocalStorage = (key, value) => {\r\n    if (process.browser) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n};\r\n\r\nexport const removeLocalStorage = key => {\r\n    if (process.browser) {\r\n        localStorage.removeItem(key);\r\n    }\r\n};\r\n// autheticate user by pass data to cookie and localstorage\r\nexport const authenticate = (data, next) => {\r\n    setCookie('token', data.token);\r\n    setLocalStorage('user', data.user);\r\n    next();\r\n};\r\n\r\nexport const isAuth = () => {\r\n    if (process.browser) {\r\n        const cookieChecked = getCookie('token');\r\n        if (cookieChecked) {\r\n            if (localStorage.getItem('user')) {\r\n                return JSON.parse(localStorage.getItem('user'));\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}